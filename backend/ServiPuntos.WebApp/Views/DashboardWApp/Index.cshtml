<div class="row">

        @if (User.IsInRole("AdminPlataforma"))
        {
            <div class="col-md-4 mb-4">
                <div class="card bg-primary h-100">
                    <div class="card-body">
                        <h5 class="card-title text-white">Usuarios</h5>
                    </div>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <button class="btn btn-sm w-100 text-white" onclick="window.location.href='UsuarioWApp/Index'">
                            Administracion de usuarios <i class="fas fa-angle-right ms-2"></i>
                        </button>
                    </div>
                </div>
            </div>
        }

        @if (User.IsInRole("AdminPlataforma"))
        {
            <div class="col-md-4 mb-4">
                <div class="card bg-white text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Tenants</h5>
                    </div>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <button class="btn text-dark btn-sm w-100" onclick="window.location.href='TenantWApp/Index'">
                            Administracion de tenants <i class="fas fa-angle-right ms-2"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-md-4 mb-4">
                <div class="card bg-success text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Producto</h5>
                    </div>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <button class="btn text-dark btn-sm w-100" onclick="window.location.href='ProductoCanjeableWApp/Index'">
                            Administracion de Productos <i class="fas fa-angle-right ms-2"></i>
                        </button>
                    </div>
                </div>
            </div>
        }

        @if (User.IsInRole("AdminPlataforma") || User.IsInRole("AdminUbicacion"))
        {
            <div class="col-md-4 mb-4">
                <div class="card bg-danger h-100">
                    <div class="card-body">
                        <h5 class="card-title text-white">Ubicaciones</h5>
                    </div>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <button class="btn btn-sm w-100 text-white" onclick="window.location.href='UbicacionWApp/Index'">
                            Administracion de ubicaciones <i class="fas fa-angle-right ms-2"></i>
                        </button>
                        <small class="text-muted mt-1">falta pagina de ubicaciones</small>
                    </div>
                </div>
            </div>

        <div class="col-md-4 mb-4">
            <div class="card bg-success h-100">
                <div class="card-body">
                    <h5 class="card-title text-white">Stock</h5>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <button class="btn btn-sm w-100 text-white" onclick="window.location.href='ProductoUbicacionWApp/Index'">
                        Administracion de productos <i class="fas fa-angle-right ms-2"></i>
                    </button>
                </div>
            </div>
        </div>
        }
    </div>
@if (User.IsInRole("AdminPlataforma"))
    {
         <div class="row">
        @*    <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">Usuarios por Rol</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="usuariosPorRol" width="400" height="300"></canvas>
                    </div>
                </div>
            </div> *@
            
            <div class="row">
    <!-- Gráfica a la izquierda -->
    <div class="col-md-6 mb-4">
        <div class="card h-100">
            <div class="card-header">
                <h5 class="card-title">Usuarios por Tenant</h5>
            </div>
            <div class="card-body">
                <canvas id="usuariosPorTenant" width="100%" height="300"></canvas>
            </div>
        </div>
    </div>

    
    <div class="col-md-6 mb-4">
        <div class="row">
            
            <div class="col-6 mb-3">
                <div class="card bg-success text-white h-100">
                    <div class="card-body">
                        <h5 class="card-title">Usuarios Totales</h5>
                        <p class="card-text display-6" id="usuariosTotales"></p>
                    </div>
                </div>
            </div>

            <div class="col-6 mb-3">
                <div class="card bg-success text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Usuarios Finales</h5>
                        <p class="card-text display-6" id="usuariosFinales"></p>
                    </div>
                </div>
            </div>

            <div class="col-6 mb-3">
                <div class="card bg-success text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Tenants Registrados</h5>
                        <p class="card-text display-6" id="tenantsTotales"></p>
                    </div>
                </div>
            </div>

            <div class="col-6 mb-3">
                <div class="card bg-success text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Dinero Generado</h5>
                        <p class="card-text display-6" id="dineroGenerado"></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<button type="button" class="btn btn-outline-primary mb-3" data-bs-toggle="modal" data-bs-target="#configModal">
    Configurar Plataforma
</button>
<div class="modal fade" id="configModal" tabindex="-1" aria-labelledby="configModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="configModalLabel">Configuración de Plataforma</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="configuracionForm">
                    <div class="mb-3">
                        <label for="expiracionSesion" class="form-label">Tiempo de expiración de sesión (minutos)</label>
                        <input type="number" class="form-control" id="expiracionSesion" name="expiracionSesion" min="1" value="@((ViewBag.ConfigPlataforma as ServiPuntos.Core.Entities.ConfigPlataforma)?.TiempoExpiracion ?? 0)">
                    </div>
                    <div class="mb-3">
                        <label for="maxIntentos" class="form-label">Cantidad máxima de intentos fallidos de login</label>
                        <input type="number" class="form-control" id="maxIntentos" name="maxIntentos" min="1" value="@((ViewBag.ConfigPlataforma as ServiPuntos.Core.Entities.ConfigPlataforma)?.MaximoIntentosLogin ?? 0)">
                    </div>
                    <div class="mb-3">
                        <label for="largoMinimo" class="form-label">Largo mínimo de la contraseña</label>
                        <input type="number" class="form-control" id="largoMinimo" name="largoMinimo" min="1" value="@((ViewBag.ConfigPlataforma as ServiPuntos.Core.Entities.ConfigPlataforma)?.LargoMinimoPassword ?? 0)">
                    </div>
                    <div class="mb-3">
                        <label for="campo4" class="form-label">Campo 4</label>
                        <input type="text" class="form-control" id="campo4" name="campo4" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="campo5" class="form-label">Campo 5</label>
                        <input type="text" class="form-control" id="campo5" name="campo5" disabled>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" form="configuracionForm" class="btn btn-primary">Guardar Configuración</button>
            </div>
        </div>
    </div>
</div>



</div>
    }

@if (User.IsInRole("AdminTenant"))
{  
    var miTenant = ViewBag.MiTenant as ServiPuntos.Core.Entities.Tenant;
    var ubicaciones = ViewBag.Ubicaciones as IEnumerable<ServiPuntos.Core.Entities.Ubicacion>;

    <!-- Nueva sección para editar Valor de Puntos -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-coins me-2"></i>
                        Configuración de Puntos
                    </h5>
                    <small class="text-muted">
                        <i class="fas fa-info-circle me-1"></i>
                        Define cuánto vale cada punto en pesos
                    </small>
                </div>
                <div class="card-body">
                    @if (miTenant != null)
                    {
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <div class="d-flex align-items-center">
                                    <div class="bg-success rounded-circle me-3 d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                        <i class="fas fa-dollar-sign text-white" style="font-size: 20px;"></i>
                                    </div>
                                    <div>
                                        <h3 class="mb-1">$<span id="valorPuntosActual">@(miTenant.ValorPunto.ToString("F2") ?? "0.00")</span></h3>
                                        <p class="text-muted mb-0">Valor actual por punto</p>
                                    </div>
                                </div>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex gap-2 align-items-center">
                                <div class="input-group" style="max-width: 200px;">
                                    <span class="input-group-text">$</span>
                                        <input type="number" 
                                               class="form-control" 
                                               id="nuevoValorPuntos" 
                                               step="0.01" 
                                               min="0.01" 
                                               max="1000"
                                               lang="en"
                                               placeholder="0.00"
                                               value="@(miTenant.ValorPunto.ToString("F2", System.Globalization.CultureInfo.InvariantCulture))"
                                               title="Ingrese un valor entre $0.01 y $1000.00">
                                    </div>
                                    <button type="button"
                                            class="btn btn-primary"
                                            id="btnActualizarValor"
                                            onclick="actualizarValorPuntos()">
                                        <i class="fas fa-save me-1"></i>
                                        Actualizar
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="row align-items-center mt-4">
                            <div class="col-md-6">
                                <div class="d-flex align-items-center">
                                    <div class="bg-info rounded-circle me-3 d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                        <i class="fas fa-tag text-white" style="font-size: 20px;"></i>
                                    </div>
                                    <div>
                                        <h3 class="mb-1"><span id="nombrePuntosActual">@miTenant.NombrePuntos</span></h3>
                                        <p class="text-muted mb-0">Nombre actual de los puntos</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="d-flex gap-2 align-items-center">
                                    <input type="text"
                                           class="form-control"
                                           id="nuevoNombrePuntos"
                                           style="max-width: 200px;"
                                           value="@miTenant.NombrePuntos"
                                           placeholder="Nombre de puntos">
                                    <button type="button"
                                            class="btn btn-primary"
                                            id="btnActualizarNombre"
                                            onclick="actualizarNombrePuntos()">
                                        <i class="fas fa-save me-1"></i>
                                        Actualizar
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="row align-items-end mt-4">
                            <div class="col-md-3 mb-2">
                                <label for="tasaCombustible" class="form-label">Tasa Combustible</label>
                                <input type="number" step="0.01" min="0" class="form-control" id="tasaCombustible" value="@(miTenant.TasaCombustible.ToString("F2", System.Globalization.CultureInfo.InvariantCulture))">
                            </div>
                            <div class="col-md-3 mb-2">
                                <label for="tasaMinimercado" class="form-label">Tasa Minimercado</label>
                                <input type="number" step="0.01" min="0" class="form-control" id="tasaMinimercado" value="@(miTenant.TasaMinimercado.ToString("F2", System.Globalization.CultureInfo.InvariantCulture))">
                            </div>
                            <div class="col-md-3 mb-2">
                                <label for="tasaServicios" class="form-label">Tasa Servicios</label>
                                <input type="number" step="0.01" min="0" class="form-control" id="tasaServicios" value="@(miTenant.TasaServicios.ToString("F2", System.Globalization.CultureInfo.InvariantCulture))">
                            </div>
                            <div class="col-md-3 mb-2">
                                <label for="diasCaducidad" class="form-label">Días Caducidad</label>
                                <input type="number" step="1" min="1" class="form-control" id="diasCaducidad" value="@miTenant.DiasCaducidadPuntos">
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-12 text-end">
                                <button type="button" class="btn btn-primary" id="btnActualizarPoliticas" onclick="actualizarPoliticas()">
                                    <i class="fas fa-save me-1"></i>
                                    Actualizar Políticas
                                </button>
                            </div>
                        </div>

                        <!-- Ejemplos informativos -->
                        <div class="mt-3 pt-3 border-top">
                            <small class="text-muted">
                                <strong>Ejemplos:</strong>
                                Si 1 punto = $<span id="ejemploValor">@(miTenant.ValorPunto.ToString("F2") ?? "1.00")</span>, entonces:
                                100 puntos = $<span id="ejemplo100">@((miTenant.ValorPunto * 100).ToString("F2") ?? "100.00")</span> | 
                                500 puntos = $<span id="ejemplo500">@((miTenant.ValorPunto * 500).ToString("F2") ?? "500.00")</span>
                                <br>
                                <strong>Valores válidos:</strong> 0.01, 0.10, 1.50, 25.99, etc. (Use punto como separador decimal)
                            </small>
                        </div>
                        
                        <!-- Token antiforgery -->
                        @Html.AntiForgeryToken()
                        
                        <!-- Mensaje de estado -->
                        <div id="mensajeEstado" class="mt-2" style="display: none;"></div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="fas fa-exclamation-triangle text-warning mb-2" style="font-size: 2rem;"></i>
                            <p class="text-muted">No se pudo cargar la información del tenant.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Acción rápida para Audiencias -->
    <div class="row mb-4">
        <div class="col-md-4 mb-4">
            <div class="card bg-info h-100">
                <div class="card-body">
                    <h5 class="card-title text-white">Audiencias</h5>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <button class="btn btn-sm w-100 text-white" onclick="window.location.href='AudienciaWApp/Index'">
                        Administración de Audiencias <i class="fas fa-angle-right ms-2"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Gestión rápida de Productos -->
    <div class="row mb-4">
        <div class="col-md-4 mb-4">
            <div class="card bg-success h-100">
                <div class="card-body">
                    <h5 class="card-title text-white">Productos</h5>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <button class="btn btn-sm w-100 text-white" onclick="window.location.href='ProductoCanjeableWApp/Index'">
                        Gestión de Productos <i class="fas fa-angle-right ms-2"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>


    <!-- Sección existente de Ubicaciones -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-map-marker-alt me-2"></i>
                        Ubicaciones de tu Tenant
                    </h5>
                    <a href="@Url.Action("Administrar", "UbicacionWApp")" class="btn btn-sm btn-outline-primary">
                        <i class="fas fa-cog me-1"></i>
                        Administrar
                    </a>
                </div>
                <div class="card-body">
                    @if (ubicaciones != null && ubicaciones.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>
                                            <i class="fas fa-store me-1"></i>
                                            Nombre
                                        </th>
                                        <th>
                                            <i class="fas fa-map-pin me-1"></i>
                                            Dirección
                                        </th>
                                        <th>
                                            <i class="fas fa-city me-1"></i>
                                            Ciudad
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var u in ubicaciones)
                                    {
                                        <tr>
                                            <td class="fw-bold">@u.Nombre</td>
                                            <td>@u.Direccion</td>
                                            <td>@u.Ciudad</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="mt-3">
                            <small class="text-muted">
                                <i class="fas fa-info-circle me-1"></i>
                                Total: @ubicaciones.Count() ubicaciones
                            </small>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-map-marker-alt text-muted mb-3" style="font-size: 3rem;"></i>
                            <p class="text-muted mb-3">No se encontraron ubicaciones asociadas a este tenant.</p>
                            <a href="@Url.Action("Crear", "UbicacionWApp")" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i>
                                Agregar Primera Ubicación
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<!-- JavaScript para la funcionalidad de actualizar valor de puntos -->
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
    function actualizarValorPuntos() {
        const inputValor = document.getElementById('nuevoValorPuntos').value;
        const btnActualizar = document.getElementById('btnActualizarValor');
        const mensajeDiv = document.getElementById('mensajeEstado');
        
        // Normalizar el valor (convertir coma a punto si es necesario)
        const nuevoValor = inputValor.replace(',', '.');
        const valorNumerico = parseFloat(nuevoValor);
        
        // Validaciones del cliente
        if (!nuevoValor || isNaN(valorNumerico) || valorNumerico < 0.01) {
            mostrarMensaje('El valor debe ser mayor o igual a $0.01', 'danger');
            return;
        }
        
        if (valorNumerico > 1000) {
            mostrarMensaje('El valor no puede ser mayor a $1000', 'danger');
            return;
        }
        
        // Deshabilitar botón y mostrar carga
        btnActualizar.disabled = true;
        btnActualizar.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Actualizando...';
        
        // Obtener token antiforgery
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
        
        // Llamada AJAX
        fetch('@Url.Action("ActualizarValorPuntos", "DashboardWApp")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': token
            },
            body: `valorPuntos=${encodeURIComponent(valorNumerico)}&__RequestVerificationToken=${encodeURIComponent(token)}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Actualizar valores en la página
                document.getElementById('valorPuntosActual').textContent = data.nuevoValor;
                document.getElementById('ejemploValor').textContent = data.nuevoValor;
                document.getElementById('ejemplo100').textContent = (parseFloat(data.nuevoValor) * 100).toFixed(2);
                document.getElementById('ejemplo500').textContent = (parseFloat(data.nuevoValor) * 500).toFixed(2);
                
                mostrarMensaje(data.message, 'success');
            } else {
                mostrarMensaje(data.message, 'danger');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            mostrarMensaje('Error de conexión. Por favor, intente nuevamente.', 'danger');
        })
        .finally(() => {
            // Restaurar botón
            btnActualizar.disabled = false;
            btnActualizar.innerHTML = '<i class="fas fa-save me-1"></i>Actualizar';
        });
    }

    function actualizarNombrePuntos() {
        const inputNombre = document.getElementById('nuevoNombrePuntos').value.trim();
        const btnNombre = document.getElementById('btnActualizarNombre');

        if (!inputNombre) {
            mostrarMensaje('El nombre de los puntos no puede estar vacío', 'danger');
            return;
        }

        if (inputNombre.length > 50) {
            mostrarMensaje('El nombre de los puntos es demasiado largo', 'danger');
            return;
        }

        btnNombre.disabled = true;
        btnNombre.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Actualizando...';

        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';

        fetch('@Url.Action("ActualizarNombrePuntos", "DashboardWApp")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': token
            },
            body: `nombrePuntos=${encodeURIComponent(inputNombre)}&__RequestVerificationToken=${encodeURIComponent(token)}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById('nombrePuntosActual').textContent = data.nuevoNombre;
                mostrarMensaje(data.message, 'success');
            } else {
                mostrarMensaje(data.message, 'danger');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            mostrarMensaje('Error de conexión. Por favor, intente nuevamente.', 'danger');
        })
        .finally(() => {
            btnNombre.disabled = false;
        btnNombre.innerHTML = '<i class="fas fa-save me-1"></i>Actualizar';
    });
    }

    function actualizarPoliticas() {
        const btn = document.getElementById('btnActualizarPoliticas');
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';

        const tasaCombustible = document.getElementById('tasaCombustible').value.replace(',', '.');
        const tasaMinimercado = document.getElementById('tasaMinimercado').value.replace(',', '.');
        const tasaServicios = document.getElementById('tasaServicios').value.replace(',', '.');
        const diasCaducidad = document.getElementById('diasCaducidad').value;

        btn.disabled = true;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Actualizando...';

        const params = new URLSearchParams();
        params.append('tasaCombustible', tasaCombustible);
        params.append('tasaMinimercado', tasaMinimercado);
        params.append('tasaServicios', tasaServicios);
        params.append('diasCaducidad', diasCaducidad);
        params.append('__RequestVerificationToken', token);

        fetch('@Url.Action("ActualizarPoliticas", "DashboardWApp")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': token
            },
            body: params.toString()
        })
        .then(r => r.json())
        .then(data => {
            if (data.success) {
                document.getElementById('tasaCombustible').value = data.tasaCombustible;
                document.getElementById('tasaMinimercado').value = data.tasaMinimercado;
                document.getElementById('tasaServicios').value = data.tasaServicios;
                document.getElementById('diasCaducidad').value = data.diasCaducidad;
                mostrarMensaje(data.message, 'success');
            } else {
                mostrarMensaje(data.message, 'danger');
            }
        })
        .catch(err => {
            console.error('Error:', err);
            mostrarMensaje('Error de conexión. Por favor, intente nuevamente.', 'danger');
        })
        .finally(() => {
            btn.disabled = false;
            btn.innerHTML = '<i class="fas fa-save me-1"></i>Actualizar Políticas';
        });
    }

    function guardarConfiguracion(e) {
        e.preventDefault();
        const btn = document.querySelector('#configuracionForm button[type="submit"]') || e.submitter;
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';

        const expiracionSesion = document.getElementById('expiracionSesion').value;
        const maxIntentos = document.getElementById('maxIntentos').value;
        const largoMinimo = document.getElementById('largoMinimo').value;

        if (btn) {
            btn.disabled = true;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Guardando...';
        }

        const params = new URLSearchParams();
        params.append('expiracionSesion', expiracionSesion);
        params.append('maxIntentos', maxIntentos);
        params.append('largoMinimo', largoMinimo);
        params.append('__RequestVerificationToken', token);

        fetch('@Url.Action("CambiarConfiguracion", "DashboardWApp")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': token
            },
            body: params.toString()
        })
        .then(r => r.json())
        .then(data => {
            mostrarMensaje(data.message, data.success ? 'success' : 'danger');
            if (data.success) {
                const modalEl = document.getElementById('configModal');
                if (modalEl) {
                    bootstrap.Modal.getInstance(modalEl)?.hide();
                }
            }
        })
        .catch(err => {
            console.error('Error:', err);
            mostrarMensaje('Error de conexión. Por favor, intente nuevamente.', 'danger');
        })
        .finally(() => {
            if (btn) {
                btn.disabled = false;
                btn.innerHTML = 'Guardar Configuración';
            }
        });
    }

    function mostrarMensaje(mensaje, tipo) {
        const mensajeDiv = document.getElementById('mensajeEstado');
        mensajeDiv.className = `alert alert-${tipo} alert-dismissible fade show`;
        mensajeDiv.innerHTML = `
            <i class="fas fa-${tipo === 'success' ? 'check-circle' : 'exclamation-triangle'} me-2"></i>
            ${mensaje}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        mensajeDiv.style.display = 'block';
        
        // Auto-hide después de 5 segundos para mensajes de éxito
        if (tipo === 'success') {
            setTimeout(() => {
                if (mensajeDiv.style.display !== 'none') {
                    const alert = bootstrap.Alert.getOrCreateInstance(mensajeDiv);
                    alert.close();
                }
            }, 5000);
        }
    }

    // Permitir actualizar con Enter
    document.addEventListener('DOMContentLoaded', function() {
        const input = document.getElementById('nuevoValorPuntos');
        if (input) {
            input.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    actualizarValorPuntos();
                }
            });
            
            // Validación en tiempo real
            input.addEventListener('input', function() {
                const inputValor = this.value.replace(',', '.');
                const valor = parseFloat(inputValor);
                const btn = document.getElementById('btnActualizarValor');
                
                if (isNaN(valor) || valor < 0.01 || valor > 1000) {
                    btn.disabled = true;
                    btn.classList.add('btn-secondary');
                    btn.classList.remove('btn-primary');
                } else {
                    btn.disabled = false;
                    btn.classList.remove('btn-secondary');
                    btn.classList.add('btn-primary');
                }
            });
        }

        const formConfig = document.getElementById('configuracionForm');
        if (formConfig) {
            formConfig.addEventListener('submit', guardarConfiguracion);
        }

        // Datos para métricas y gráfica (solo AdminPlataforma)
        const chartCanvas = document.getElementById('usuariosPorTenant');
        if (chartCanvas) {
            const tenants = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Tenants ?? new string[0]));
            const cantidadTenants = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.CantidadesTenants ?? new int[0]));
            const roles = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Roles ?? new string[0]));
            const cantidadesRoles = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Cantidades ?? new int[0]));

            const totalUsuarios = cantidadesRoles.reduce((a, b) => a + b, 0);
            const idxFinal = roles.indexOf('UsuarioFinal');
            const usuariosFinales = idxFinal !== -1 ? cantidadesRoles[idxFinal] : 0;
            const dineroGenerado = usuariosFinales * 10;

            if (document.getElementById('usuariosTotales')) {
                document.getElementById('usuariosTotales').textContent = totalUsuarios;
            }
            if (document.getElementById('usuariosFinales')) {
                document.getElementById('usuariosFinales').textContent = usuariosFinales;
            }
            if (document.getElementById('tenantsTotales')) {
                document.getElementById('tenantsTotales').textContent = tenants.length;
            }
            if (document.getElementById('dineroGenerado')) {
                document.getElementById('dineroGenerado').textContent = `$${dineroGenerado.toFixed(2)}`;
            }

            new Chart(chartCanvas.getContext('2d'), {
                type: 'bar',
                data: {
                    labels: tenants,
                    datasets: [{
                        label: 'Usuarios',
                        data: cantidadTenants,
                        backgroundColor: 'rgba(75, 192, 192, 0.6)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: { legend: { display: false } }
                }
            });
        }
    });
    </script>
}