@{
    ViewData["Title"] = "Dashboard";
    var roles = ViewBag.Roles as string[];
    var cantidades = ViewBag.Cantidades as int[];
    var tenants = ViewBag.Tenants as string[];
    var cantidadesTenants = ViewBag.CantidadesTenants as int[];
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container mt-4">
    
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body text-center">
                    <h1 class="display-4">Hello World Dashboard</h1>
                    <p class="lead">¡Bienvenido a tu dashboard, @User.Identity.Name!</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        
        @if (User.IsInRole("AdminPlataforma"))
        {
            <div class="col-md-4 mb-4">
                <div class="card bg-primary h-100">
                    <div class="card-body">
                        <h5 class="card-title text-white">Usuarios</h5>
                    </div>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <button class="btn btn-sm w-100 text-white" onclick="window.location.href='UsuarioWApp/Index'">
                            Administracion de usuarios <i class="fas fa-angle-right ms-2"></i>
                        </button>
                    </div>
                </div>
            </div>
        }

        @if (User.IsInRole("AdminPlataforma") || User.IsInRole("AdminTenant"))
        {
            <div class="col-md-4 mb-4">
                <div class="card bg-white text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Tenants</h5>
                    </div>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <button class="btn text-dark btn-sm w-100" onclick="window.location.href='TenantWApp/Index'">
                            Administracion de tenants <i class="fas fa-angle-right ms-2"></i>
                        </button>
                    </div>
                </div>
            </div>
        }

        @if (User.IsInRole("AdminPlataforma") || User.IsInRole("AdminUbicacion"))
        {
            <div class="col-md-4 mb-4">
                <div class="card bg-danger h-100">
                    <div class="card-body">
                        <h5 class="card-title text-white">Ubicaciones</h5>
                    </div>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <button class="btn btn-sm w-100 text-white" onclick="window.location.href='UbicacionWApp/Index'">
                            Administracion de ubicaciones <i class="fas fa-angle-right ms-2"></i>
                        </button>
                        <small class="text-muted mt-1">falta pagina de ubicaciones</small>
                    </div>
                </div>
            </div>
        }
    </div>
    
    
    @if (User.IsInRole("AdminPlataforma"))
    {
         <div class="row">
        @*    <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">Usuarios por Rol</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="usuariosPorRol" width="400" height="300"></canvas>
                    </div>
                </div>
            </div> *@
            
            <div class="row">
    <!-- Gráfica a la izquierda -->
    <div class="col-md-6 mb-4">
        <div class="card h-100">
            <div class="card-header">
                <h5 class="card-title">Usuarios por Tenant</h5>
            </div>
            <div class="card-body">
                <canvas id="usuariosPorTenant" width="100%" height="300"></canvas>
            </div>
        </div>
    </div>

    
    <div class="col-md-6 mb-4">
        <div class="row">
            
            <div class="col-6 mb-3">
                <div class="card bg-success text-white h-100">
                    <div class="card-body">
                        <h5 class="card-title">Usuarios Finales</h5>
                        <p class="card-text display-6" id="usuariosFinales"></p>
                    </div>
                </div>
            </div>
            
            <div class="col-6 mb-3">
                <div class="card bg-success text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Dinero Generado</h5>
                        <p class="card-text display-6" id="dineroGenerado"></p>
                    </div>
                </div>
            </div>
            
            <div class="col-6 mb-3">
                <div class="card bg-success text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Otr ametrica</h5>
                        <p class="card-text display-6">El dinero generado es usuarios finales x 10.</p>
                        <p class="card-text display-6" id=""></p>
                    </div>
                </div>
            </div>
            
            <div class="col-6 mb-3">
                <div class="card bg-success text-dark h-100">
                    <div class="card-body">
                        <h5 class="card-title">Dinero Generado</h5>
                        <p class="card-text display-6">No se que mas metricas agregar</p>
                        <p class="card-text display-6" id=""></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<button type="button" class="btn btn-outline-primary mb-3" data-bs-toggle="modal" data-bs-target="#configModal">
    Configurar Plataforma
</button>
<div class="modal fade" id="configModal" tabindex="-1" aria-labelledby="configModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="configModalLabel">Configuración de Plataforma</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="configuracionForm" method="post" action="CambiarConfiguracion">
                    <div class="mb-3">
                        <label for="expiracionSesion" class="form-label">Tiempo de expiración de sesión de los clientes (minutos)</label>
                        <input type="number" class="form-control" id="expiracionSesion" name="expiracionSesion" min="1">
                    </div>
                    <div class="mb-3">
                        <label for="maxIntentos" class="form-label">Cantidad máxima de intentos fallidos de login de un cliente</label>
                        <input type="number" class="form-control" id="maxIntentos" name="maxIntentos" min="1">
                    </div>
                    <div class="mb-3">
                        <label for="largoMinimo" class="form-label">Largo mínimo de la contraseña de los clientes</label>
                        <input type="number" class="form-control" id="largoMinimo" name="largoMinimo" min="1">
                    </div>
                    <div class="mb-3">
                        <label for="campo4" class="form-label">Campo 4</label>
                        <input type="text" class="form-control" id="campo4" name="campo4" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="campo5" class="form-label">Campo 5</label>
                        <input type="text" class="form-control" id="campo5" name="campo5" disabled>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" form="configuracionForm" class="btn btn-primary">Guardar Configuración</button>
            </div>
        </div>
    </div>
</div>
}
</div>
    }
    //Usuarios x rol
    @* const ctxRol = document.getElementById('usuariosPorRol').getContext('2d');
    const chartRol = new Chart(ctxRol, {
        type: 'bar',
        data: {
            labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(roles)),
            datasets: [{
                label: 'Cantidad de usuarios',
                data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(cantidades)),
                backgroundColor: [
                    'rgba(54, 162, 235, 0.6)',   // AdminTenant
                    'rgba(255, 99, 132, 0.6)',   // AdminPlataforma
                    'rgba(255, 206, 86, 0.6)',   // AdminUbicacion
                    'rgba(75, 192, 192, 0.6)'    // UsuarioFinal
                ],
                borderColor: 'rgba(255, 255, 255, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom'
                },
                title: {
                    display: true,
                    text: 'Distribución de usuarios por rol'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 1
                    }
                }
            }
        }
    }); *@

    @if (User.IsInRole("AdminTenant"))
        {  
            var miTenant = "no se encontro el tenant en la cookie";
            @if (ViewBag.MiTenant != null)
            {
                miTenant = ViewBag.MiTenant.Nombre;
            }

    @* var ubicaciones = ViewBag.Ubicaciones; *@

    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Tenant actual</h5>
                </div>
                <div class="card-body">
                    <p class="fs-5 mb-0">@miTenant</p>
                </div>
            </div>
        </div>

        @* <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Ubicaciones del Tenant</h5>
                </div>
                <div class="card-body">
                    @if (ubicaciones != null && ubicaciones.Count > 0)
                    {
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Nombre</th>
                                    <th>Dirección</th> 
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var u in ubicaciones)
                                {
                                    <tr>
                                        <td>@u.Nombre</td>
                                        <td>@u.Direccion</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p class="text-muted">No se encontraron ubicaciones asociadas.</p>
                    }
                </div>
            </div>
        </div> *@
    </div>
}
    <script>
    const esAdminPlataforma = @User.IsInRole("AdminPlataforma").ToString().ToLower();
    if(esAdminPlataforma){
    const cantidades=@Html.Raw(System.Text.Json.JsonSerializer.Serialize(cantidades));
    let usuariosFinales = 0;
    const roles = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(roles));
    for (let i = 0; i < roles.length; i++) {
        if (roles[i] === "UsuarioFinal") {
            usuariosFinales = cantidades[i];
        }
    }

    const dineroGenerado = usuariosFinales * 10;

    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("usuariosFinales").textContent = usuariosFinales;
        document.getElementById("dineroGenerado").textContent = "$" + dineroGenerado.toFixed(2);
    }); 
    //Usuarios x tenant
    
        const ctxTenant = document.getElementById('usuariosPorTenant').getContext('2d');
        const chartTenant = new Chart(ctxTenant, {
            type: 'bar',
            data: {
                labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(tenants)),
                datasets: [{
                    label: 'Usuarios por tenant',
                    data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(cantidadesTenants)),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 205, 86, 0.8)',
                        'rgba(75, 192, 192, 0.8)',
                        'rgba(153, 102, 255, 0.8)',
                        'rgba(255, 159, 64, 0.8)',
                        'rgba(199, 199, 199, 0.8)',
                        'rgba(83, 102, 255, 0.8)'
                    ],
                    borderColor: 'rgba(255, 255, 255, 1)',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    title: {
                        display: true,
                        text: 'Distribución de usuarios por tenant'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.parsed;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((value / total) * 100).toFixed(1);
                                return `${label}: ${value} usuarios (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    }
    
</script>
</div>