<!-- Esta es la sección completa para AdminTenant que reemplaza la actual en Index.cshtml -->

@if (User.IsInRole("AdminTenant"))
{  
    var miTenant = ViewBag.MiTenant as ServiPuntos.Core.Entities.Tenant;
    var ubicaciones = ViewBag.Ubicaciones as IEnumerable<ServiPuntos.Core.Entities.Ubicacion>;

    <!-- Nueva sección para editar Valor de Puntos -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-coins me-2"></i>
                        Configuración de Puntos
                    </h5>
                    <small class="text-muted">
                        <i class="fas fa-info-circle me-1"></i>
                        Define cuánto vale cada punto en pesos
                    </small>
                </div>
                <div class="card-body">
                    @if (miTenant != null)
                    {
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <div class="d-flex align-items-center">
                                    <div class="bg-success rounded-circle me-3 d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                        <i class="fas fa-dollar-sign text-white" style="font-size: 20px;"></i>
                                    </div>
                                    <div>
                                        <h3 class="mb-1">$<span id="valorPuntosActual">@(miTenant.ValorPunto.ToString("F2") ?? "0.00")</span></h3>
                                        <p class="text-muted mb-0">Valor actual por punto</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="d-flex gap-2 align-items-center">
                                    <div class="input-group" style="max-width: 200px;">
                                        <span class="input-group-text">$</span>
                                        <input type="number" 
                                               class="form-control" 
                                               id="nuevoValorPuntos" 
                                               step="0.01" 
                                               min="0.01" 
                                               max="1000"
                                               lang="en"
                                               placeholder="0.00"
                                               value="@(miTenant.ValorPunto.ToString("F2", System.Globalization.CultureInfo.InvariantCulture))"
                                               title="Ingrese un valor entre $0.01 y $1000.00">
                                    </div>
                                    <button type="button" 
                                            class="btn btn-primary" 
                                            id="btnActualizarValor"
                                            onclick="actualizarValorPuntos()">
                                        <i class="fas fa-save me-1"></i>
                                        Actualizar
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Ejemplos informativos -->
                        <div class="mt-3 pt-3 border-top">
                            <small class="text-muted">
                                <strong>Ejemplos:</strong>
                                Si 1 punto = $<span id="ejemploValor">@(miTenant.ValorPunto.ToString("F2") ?? "1.00")</span>, entonces:
                                100 puntos = $<span id="ejemplo100">@((miTenant.ValorPunto * 100).ToString("F2") ?? "100.00")</span> | 
                                500 puntos = $<span id="ejemplo500">@((miTenant.ValorPunto * 500).ToString("F2") ?? "500.00")</span>
                                <br>
                                <strong>Valores válidos:</strong> 0.01, 0.10, 1.50, 25.99, etc. (Use punto como separador decimal)
                            </small>
                        </div>
                        
                        <!-- Token antiforgery -->
                        @Html.AntiForgeryToken()
                        
                        <!-- Mensaje de estado -->
                        <div id="mensajeEstado" class="mt-2" style="display: none;"></div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="fas fa-exclamation-triangle text-warning mb-2" style="font-size: 2rem;"></i>
                            <p class="text-muted">No se pudo cargar la información del tenant.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Sección existente de Ubicaciones -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-map-marker-alt me-2"></i>
                        Ubicaciones de tu Tenant
                    </h5>
                    <a href="@Url.Action("Administrar", "UbicacionWApp")" class="btn btn-sm btn-outline-primary">
                        <i class="fas fa-cog me-1"></i>
                        Administrar
                    </a>
                </div>
                <div class="card-body">
                    @if (ubicaciones != null && ubicaciones.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>
                                            <i class="fas fa-store me-1"></i>
                                            Nombre
                                        </th>
                                        <th>
                                            <i class="fas fa-map-pin me-1"></i>
                                            Dirección
                                        </th>
                                        <th>
                                            <i class="fas fa-city me-1"></i>
                                            Ciudad
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var u in ubicaciones)
                                    {
                                        <tr>
                                            <td class="fw-bold">@u.Nombre</td>
                                            <td>@u.Direccion</td>
                                            <td>@u.Ciudad</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="mt-3">
                            <small class="text-muted">
                                <i class="fas fa-info-circle me-1"></i>
                                Total: @ubicaciones.Count() ubicaciones
                            </small>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-map-marker-alt text-muted mb-3" style="font-size: 3rem;"></i>
                            <p class="text-muted mb-3">No se encontraron ubicaciones asociadas a este tenant.</p>
                            <a href="@Url.Action("Crear", "UbicacionWApp")" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i>
                                Agregar Primera Ubicación
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<!-- JavaScript para la funcionalidad de actualizar valor de puntos -->
@section Scripts {
    <script>
    function actualizarValorPuntos() {
        const inputValor = document.getElementById('nuevoValorPuntos').value;
        const btnActualizar = document.getElementById('btnActualizarValor');
        const mensajeDiv = document.getElementById('mensajeEstado');
        
        // Normalizar el valor (convertir coma a punto si es necesario)
        const nuevoValor = inputValor.replace(',', '.');
        const valorNumerico = parseFloat(nuevoValor);
        
        // Validaciones del cliente
        if (!nuevoValor || isNaN(valorNumerico) || valorNumerico < 0.01) {
            mostrarMensaje('El valor debe ser mayor o igual a $0.01', 'danger');
            return;
        }
        
        if (valorNumerico > 1000) {
            mostrarMensaje('El valor no puede ser mayor a $1000', 'danger');
            return;
        }
        
        // Deshabilitar botón y mostrar carga
        btnActualizar.disabled = true;
        btnActualizar.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Actualizando...';
        
        // Obtener token antiforgery
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
        
        // Llamada AJAX
        fetch('@Url.Action("ActualizarValorPuntos", "DashboardWApp")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': token
            },
            body: `valorPuntos=${encodeURIComponent(valorNumerico)}&__RequestVerificationToken=${encodeURIComponent(token)}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Actualizar valores en la página
                document.getElementById('valorPuntosActual').textContent = data.nuevoValor;
                document.getElementById('ejemploValor').textContent = data.nuevoValor;
                document.getElementById('ejemplo100').textContent = (parseFloat(data.nuevoValor) * 100).toFixed(2);
                document.getElementById('ejemplo500').textContent = (parseFloat(data.nuevoValor) * 500).toFixed(2);
                
                mostrarMensaje(data.message, 'success');
            } else {
                mostrarMensaje(data.message, 'danger');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            mostrarMensaje('Error de conexión. Por favor, intente nuevamente.', 'danger');
        })
        .finally(() => {
            // Restaurar botón
            btnActualizar.disabled = false;
            btnActualizar.innerHTML = '<i class="fas fa-save me-1"></i>Actualizar';
        });
    }

    function mostrarMensaje(mensaje, tipo) {
        const mensajeDiv = document.getElementById('mensajeEstado');
        mensajeDiv.className = `alert alert-${tipo} alert-dismissible fade show`;
        mensajeDiv.innerHTML = `
            <i class="fas fa-${tipo === 'success' ? 'check-circle' : 'exclamation-triangle'} me-2"></i>
            ${mensaje}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        mensajeDiv.style.display = 'block';
        
        // Auto-hide después de 5 segundos para mensajes de éxito
        if (tipo === 'success') {
            setTimeout(() => {
                if (mensajeDiv.style.display !== 'none') {
                    const alert = bootstrap.Alert.getOrCreateInstance(mensajeDiv);
                    alert.close();
                }
            }, 5000);
        }
    }

    // Permitir actualizar con Enter
    document.addEventListener('DOMContentLoaded', function() {
        const input = document.getElementById('nuevoValorPuntos');
        if (input) {
            input.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    actualizarValorPuntos();
                }
            });
            
            // Validación en tiempo real
            input.addEventListener('input', function() {
                const inputValor = this.value.replace(',', '.');
                const valor = parseFloat(inputValor);
                const btn = document.getElementById('btnActualizarValor');
                
                if (isNaN(valor) || valor < 0.01 || valor > 1000) {
                    btn.disabled = true;
                    btn.classList.add('btn-secondary');
                    btn.classList.remove('btn-primary');
                } else {
                    btn.disabled = false;
                    btn.classList.remove('btn-secondary');
                    btn.classList.add('btn-primary');
                }
            });
        }
    });
    </script>
}