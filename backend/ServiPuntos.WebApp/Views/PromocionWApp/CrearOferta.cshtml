@model ServiPuntos.WebApp.Models.CreatePromocionViewModel
@using ServiPuntos.Core.Enums
@{
    ViewData["Title"] = "Crear Oferta";
}
<div class="container">
    <h3 class="mb-4">@ViewData["Title"]</h3>
    <form asp-action="CrearOferta" method="post">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Tipo, new { Value = TipoPromocion.Oferta })
        <div id="formFields">
            <div class="mb-3">
                <label asp-for="Titulo" class="form-label">Título</label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Descripcion" class="form-label">Descripción</label>
                <textarea asp-for="Descripcion" class="form-control" rows="3"></textarea>
            </div>
            <div class="row mb-3">
                <div class="col">
                    <label asp-for="FechaInicio" class="form-label">Inicio</label>
                    <input asp-for="FechaInicio" class="form-control" type="date" />
                </div>
                <div class="col">
                    <label asp-for="FechaFin" class="form-label">Fin</label>
                    <input asp-for="FechaFin" class="form-control" type="date" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col" id="descuentoField">
                    <label asp-for="DescuentoEnPesos" class="form-label">Descuento</label>
                    <input asp-for="DescuentoEnPesos" class="form-control" type="number" step="0.01" />
                </div>
                <input type="hidden" asp-for="PrecioEnPesos" id="PrecioEnPesos" />
            </div>
            <div class="mb-3">
                <label class="form-label">Ubicación</label>
                <select class="form-select" id="UbicacionSelect" name="UbicacionIds">
                    <option value="">Seleccione...</option>
                    @foreach (var u in (IEnumerable<ServiPuntos.Core.Entities.Ubicacion>)ViewBag.Ubicaciones)
                    {
                        <option value="@u.Id">@u.Nombre</option>
                    }
                </select>
                <div class="form-text">Seleccione la estación para cargar sus productos.</div>
            </div>
            <div class="mb-3">
                <label asp-for="AudienciaId" class="form-label">Audiencia</label>
                <select asp-for="AudienciaId" class="form-select">
                    <option value="">Todos los usuarios</option>
                    @foreach (var a in (IEnumerable<ServiPuntos.Core.Entities.Audiencia>)ViewBag.Audiencias)
                    {
                        <option value="@a.Id">@a.NombreDescriptivo</option>
                    }
                </select>
            </div>
            <div class="mb-3" id="productoSection" style="display:none;">
                <label class="form-label">Producto</label>
                <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#productoModal">Seleccionar Producto</button>
                <input type="hidden" name="ProductoIds" id="ProductoId" />
                <div id="productoSeleccionado" class="mt-3" style="display:none;"></div>
            </div>
            <button type="submit" class="btn btn-primary">Crear</button>
            <a asp-action="Index" class="btn btn-secondary">Volver</a>
        </div>
    </form>
</div>

<!-- Modal selección de producto -->
<div class="modal fade" id="productoModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Seleccionar Producto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3" id="productosContainer">
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const productoSection = document.getElementById('productoSection');

            function actualizarCard() {
                const card = document.querySelector('#productoSeleccionado');
                const id = document.getElementById('ProductoId').value;
                if (!id) {
                    card.style.display = 'none';
                    card.innerHTML = '';
                    document.getElementById('PrecioEnPesos').value = '';
                    return;
                }
                const selected = document.querySelector(`.seleccionar-producto[data-id="${id}"]`);
                const nombre = selected.dataset.nombre;
                const foto = selected.dataset.foto;
                const precio = parseFloat(selected.dataset.precio || '0');
                const descuento = parseFloat(document.getElementById('DescuentoEnPesos').value || '0');
                const final = Math.max(precio - (precio * descuento / 100), 0);
                document.getElementById('PrecioEnPesos').value = final.toFixed(2);
                card.innerHTML = `<div class="card" style="max-width: 18rem;">
                        <img src="${foto}" class="card-img-top" style="height:150px; object-fit:cover;" />
                        <div class="card-body">
                            <h6 class="card-title mb-2">${nombre}</h6>
                            <p class="mb-0">Precio: $${precio.toFixed(2)}</p>
                            <p class="mb-0">Descuento: ${descuento}%</p>
                            <p class="fw-bold">Precio final: $${final.toFixed(2)}</p>
                        </div>
                    </div>`;
                card.style.display = '';
            }

            function attachSelectHandlers() {
                document.querySelectorAll('.seleccionar-producto').forEach(card => {
                    card.addEventListener('click', () => {
                        document.getElementById('ProductoId').value = card.dataset.id;
                        actualizarCard();
                        bootstrap.Modal.getInstance(document.getElementById('productoModal')).hide();
                    });
                });
            }

            async function cargarProductos(ubicacionId) {
                const cont = document.getElementById('productosContainer');
                cont.innerHTML = '';
                if (!ubicacionId) return;
                // La API de productos se expone en el proyecto ServiPuntos.API
                // que por defecto corre en https://localhost:5019. Al usar una
                // ruta relativa se intentaba resolver contra este mismo WebApp
                // (puerto 5240) y se obtenía un 404. Por eso construimos la URL
                // completa hacia la API para cargar correctamente los productos.
                const apiBase = 'https://localhost:5019';
                const resp = await fetch(`${apiBase}/api/ProductoUbicacion/ubicacion/${ubicacionId}`);
                if (!resp.ok) return;
                const productos = await resp.json();
                productos.forEach(p => {
                    const foto = p.productoCanjeable?.fotoUrl || '/images/placeholder-logo.png';
                    const nombre = p.productoCanjeable?.nombre || '';
                    const col = document.createElement('div');
                    col.className = 'col';
                    col.innerHTML = `<div class="card h-100 producto-card seleccionar-producto" data-id="${p.productoCanjeableId}" data-nombre="${nombre}" data-foto="${foto}" data-precio="${p.precio}">
                            <img src="${foto}" class="card-img-top" style="height:150px; object-fit:cover;" />
                            <div class="card-body p-2">
                                <h6 class="card-title">${nombre}</h6>
                                <p class="mb-0"><small>$${p.precio}</small></p>
                            </div>
                        </div>`;
                    cont.appendChild(col);
                });
                attachSelectHandlers();
            }

            document.getElementById('UbicacionSelect').addEventListener('change', e => {
                const val = e.target.value;
                if (val) {
                    productoSection.style.display = '';
                    cargarProductos(val);
                } else {
                    productoSection.style.display = 'none';
                    document.getElementById('ProductoId').value = '';
                    const card = document.getElementById('productoSeleccionado');
                    card.style.display = 'none';
                    card.innerHTML = '';
                }
            });

            document.getElementById('DescuentoEnPesos').addEventListener('input', actualizarCard);

            if (document.getElementById('UbicacionSelect').value) {
                productoSection.style.display = '';
                cargarProductos(document.getElementById('UbicacionSelect').value);
            }

            actualizarCard();
        });
    </script>
}
